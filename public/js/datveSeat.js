document.addEventListener("DOMContentLoaded", async function () {
    const seatGridContainer = document.querySelectorAll(".seat-grid");
    const seatCountElement = document.getElementById("seat-count");
    const selectedSeatsElement = document.getElementById("selected-seats");
    const ticketPriceElement = document.getElementById("ticket-price");
    const finalPriceElement = document.getElementById("final-price");
    const bookTicketBtn = document.getElementById("book-ticket-btn");

    let selectedSeats = [];
    let seatPrice = 0;
    let seatsMap = {}; // Mapping gi·ªØa seat_id v√† seat_number

    const urlParams = new URLSearchParams(window.location.search);
    const tripId = urlParams.get("tripId");

    if (tripId) {
        try {
            // 1Ô∏è‚É£ L·∫•y danh s√°ch gh·∫ø t·ª´ API
            const seatResponse = await fetch(`/trips/${tripId}/seats`);
            if (!seatResponse.ok) throw new Error("L·ªói khi l·∫•y danh s√°ch gh·∫ø");
            const seats = await seatResponse.json();

            // X√≥a c√°c gh·∫ø m·∫∑c ƒë·ªãnh
            seatGridContainer.forEach(grid => grid.innerHTML = "");

            // L∆∞u mapping seat_id ‚Üî seat_number
            seats.forEach(seat => {
                seatsMap[seat.id] = seat.seat_number;
            });

            // 2Ô∏è‚É£ Render danh s√°ch gh·∫ø t·ª´ API
            seats.forEach(seat => {
                const seatLabel = document.createElement("label");
                seatLabel.classList.add("seat");

                if (seat.status === "BOOKED") {
                    seatLabel.classList.add("sold");
                } else if (seat.status === "PENDING") {
                    seatLabel.classList.add("pending");
                } else {
                    seatLabel.classList.add("available");
                }

                const seatInput = document.createElement("input");
                seatInput.type = "checkbox";
                seatInput.name = "seat";
                seatInput.value = seat.id;
                seatInput.disabled = seat.status === "BOOKED"; // Kh√≥a gh·∫ø ƒë√£ ƒë·∫∑t

                const seatSpan = document.createElement("span");
                seatSpan.textContent = seat.seat_number;

                seatLabel.appendChild(seatInput);
                seatLabel.appendChild(seatSpan);

                if (seat.seat_number.startsWith("A")) {
                    seatGridContainer[0].appendChild(seatLabel);
                } else {
                    seatGridContainer[1].appendChild(seatLabel);
                }
            });

            // 3Ô∏è‚É£ L·∫•y gi√° v√© t·ª´ API (C·ªê ƒê·ªäNH GI√Å V√â)
            const priceResponse = await fetch(`/trips/${tripId}/price`);
            if (!priceResponse.ok) throw new Error("L·ªói khi l·∫•y gi√° v√©");

            const priceData = await priceResponse.json();
            seatPrice = parseInt(priceData.trip_price) || 0;
            
            // Gi√° v√© c·ªë ƒë·ªãnh
            ticketPriceElement.textContent = `${seatPrice.toLocaleString("vi-VN")}ƒë`;

            // 4Ô∏è‚É£ X·ª≠ l√Ω ch·ªçn gh·∫ø
            document.querySelectorAll(".seat input[type='checkbox']").forEach(checkbox => {
                checkbox.addEventListener("change", function () {
                    const seatId = this.value;
                    const seatLabel = this.parentElement;

                    if (this.checked) {
                        if (selectedSeats.length < 5) {
                            selectedSeats.push(seatId);
                            seatLabel.classList.add("selected");
                        } else {
                            this.checked = false;
                            alert("B·∫°n ch·ªâ c√≥ th·ªÉ ch·ªçn t·ªëi ƒëa 5 gh·∫ø!");
                        }
                    } else {
                        selectedSeats = selectedSeats.filter(id => id !== seatId);
                        seatLabel.classList.remove("selected");
                    }

                    seatCountElement.textContent = selectedSeats.length;
                    selectedSeatsElement.textContent = selectedSeats.length > 0
                        ? selectedSeats.map(id => seatsMap[id]).join(", ") // Hi·ªÉn th·ªã seat_number thay v√¨ ID
                        : "Kh√¥ng c√≥";

                    const totalPrice = selectedSeats.length * seatPrice;
                    finalPriceElement.textContent = `${totalPrice.toLocaleString("vi-VN")}ƒë`;
                });
            });

            // 5Ô∏è‚É£ X·ª≠ l√Ω ƒë·∫∑t v√©
            bookTicketBtn.addEventListener("click", async function () {
                if (selectedSeats.length === 0) {
                    alert("Vui l√≤ng ch·ªçn √≠t nh·∫•t m·ªôt gh·∫ø!");
                    return;
                }

                // Ki·ªÉm tra l·∫°i tr·∫°ng th√°i gh·∫ø t·ª´ server tr∆∞·ªõc khi ƒë·∫∑t
                const seatStatusResponse = await fetch(`/trips/${tripId}/seats`);
                if (!seatStatusResponse.ok) throw new Error("L·ªói khi ki·ªÉm tra tr·∫°ng th√°i gh·∫ø");
                const updatedSeats = await seatStatusResponse.json();

                let pendingSeatsSelected = selectedSeats.filter(seatId => {
                    const seat = updatedSeats.find(s => s.id == seatId);
                    return seat && seat.status === "PENDING";
                });

                if (pendingSeatsSelected.length > 0) {
                    alert(`Gh·∫ø ${pendingSeatsSelected.map(id => seatsMap[id]).join(", ")} ƒëang c√≥ ng∆∞·ªùi ƒë·∫∑t. Vui l√≤ng ch·ªçn gh·∫ø kh√°c.`);
                    return;
                }

                // üü¢ Ki·ªÉm tra th√¥ng tin kh√°ch h√†ng
                const customerName = document.querySelector("input[name='fullname']").value.trim();
                const customerPhone = document.querySelector("input[name='phone']").value.trim();
                const customerEmail = document.querySelector("input[name='email']").value.trim();
                const termsChecked = document.querySelector("input[name='terms']").checked;

                if (!customerName) {
                    alert("Vui l√≤ng nh·∫≠p H·ªç v√† T√™n!");
                    return;
                }
                if (!customerPhone) {
                    alert("Vui l√≤ng nh·∫≠p S·ªë ƒëi·ªán tho·∫°i!");
                    return;
                }
                if (!customerEmail) {
                    alert("Vui l√≤ng nh·∫≠p Email!");
                    return;
                }
                if (!termsChecked) {
                    alert("B·∫°n c·∫ßn ƒë·ªìng √Ω v·ªõi ƒëi·ªÅu kho·∫£n & ch√≠nh s√°ch b·∫£o m·∫≠t tr∆∞·ªõc khi ƒë·∫∑t v√©.");
                    return;
                }

                // üü¢ Ti·∫øp t·ª•c ƒë·∫∑t v√© n·∫øu t·∫•t c·∫£ ƒëi·ªÅu ki·ªán ƒë√£ th·ªèa m√£n
                const pickupLocation = document.querySelector("select[name='pickup']").value;
                const dropoffLocation = document.querySelector("select[name='dropoff']").value;
                const totalPrice = selectedSeats.length * seatPrice; 
                const bookingData = {
                    trip_id: tripId,
                    ticket_price: seatPrice,
                    seat_ids: selectedSeats,
                    customer_name: customerName,
                    customer_phone: customerPhone,
                    customer_email: customerEmail,
                    pickup_location: pickupLocation,
                    dropoff_location: dropoffLocation,
                    total_price_ticket: totalPrice
                };

                try {
                    const response = await fetch("/api/tickets/book", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify(bookingData),
                        credentials: "include"
                    });

                    const data = await response.json();
                    if (response.ok) {
                        alert(`ƒê·∫∑t v√© th√†nh c√¥ng! M√£ v√©: ${data.ticket_code}`);
                        window.location.href = `/thanhtoan?trip_id=${tripId}&ticket_id=${data.ticket_id}&ticket_code=${data.ticket_code}&total_price=${selectedSeats.length * seatPrice}&customer_name=${encodeURIComponent(customerName)}&customer_phone=${encodeURIComponent(customerPhone)}&customer_email=${encodeURIComponent(customerEmail)}`;
                    } else {
                        alert(data.message || "L·ªói khi ƒë·∫∑t v√©!");
                    }
                } catch (error) {
                    console.error("L·ªói khi g·ª≠i y√™u c·∫ßu ƒë·∫∑t v√©:", error);
                    alert("C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i!");
                }
            });

        } catch (error) {
            console.error("üî• L·ªói khi t·∫£i d·ªØ li·ªáu gh·∫ø:", error);
        }
    } else {
        console.warn("Kh√¥ng c√≥ tripId, kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu.");
    }
});
